#include "Scene.h"
#include <stdio.h>
#include "Globals.h"


Scene::Scene()
{
	player = nullptr;
	level = nullptr;
	levelInteractables = nullptr;
	levelHiddenBlocks = nullptr;
	enemies = nullptr;
	shots = nullptr;
	particles = nullptr;
	font = nullptr;
	timer = 0;
	currentLevel = 1;
	zombieActive1 = false;
	zombieActive2 = false;
	dyingTimer = false;

	camera.target = { 0, 0 };				//Center of the screen
	camera.offset = { 0, MARGIN_GUI_Y };	//Offset from the target (center of the screen)
	camera.rotation = 0.0f;					//No rotation
	camera.zoom = 1.0f;						//Default zoom

	debug = DebugMode::OFF;
}
Scene::~Scene()
{
	if (player != nullptr)
	{
		player->Release();
		delete player;
		player = nullptr;
	}
	if (level != nullptr)
	{
		level->Release();
		delete level;
		level = nullptr;
	}
	if (levelInteractables != nullptr)
	{
		levelInteractables->Release();
		delete levelInteractables;
		levelInteractables = nullptr;
	}
	if (levelHiddenBlocks != nullptr)
	{
		levelHiddenBlocks->Release();
		delete levelHiddenBlocks;
		levelHiddenBlocks = nullptr;
	}
	for (Entity* obj : objects)
	{
		delete obj;
	}
	objects.clear();
	if (enemies != nullptr)
	{
		enemies->Release();
		delete enemies;
		enemies = nullptr;
	}
	if (shots != nullptr)
	{
		delete shots;
		shots = nullptr;
	}
	if (particles != nullptr)
	{
		delete particles;
		particles = nullptr;
	}
	if (font != nullptr) //Lava u Pol <3
	{
		delete font;
		font = nullptr;
	}
}
AppStatus Scene::Init()
{

	//Create player
	player = new Player({ 0,0 }, State::IDLE, Look::RIGHT);
	if (player == nullptr)
	{
		LOG("Failed to allocate memory for Player");
		return AppStatus::ERROR;
	}
	//Initialise player
	if (player->Initialise() != AppStatus::OK)
	{
		LOG("Failed to initialise Player");
		return AppStatus::ERROR;
	}

	//Create enemy manager
	enemies = new EnemyManager();
	if (enemies == nullptr)
	{
		LOG("Failed to allocate memory for Enemy Manager");
		return AppStatus::ERROR;
	}
	//Initialise enemy manager
	if (enemies->Initialise() != AppStatus::OK)
	{
		LOG("Failed to initialise Enemy Manager");
		return AppStatus::ERROR;
	}
	
	//Create shot manager 
	shots = new ShotManager();
	if (shots == nullptr)
	{
		LOG("Failed to allocate memory for Shot Manager");
		return AppStatus::ERROR;
	}
	//Initialise shot manager
	if (shots->Initialise() != AppStatus::OK)
	{
		LOG("Failed to initialise Shot Manager");
		return AppStatus::ERROR;
	}

	//Create particle manager 
	particles = new ParticleManager();
	if (particles == nullptr)
	{
		LOG("Failed to allocate memory for Particle Manager");
		return AppStatus::ERROR;
	}
	//Initialise particle manager
	if (particles->Initialise() != AppStatus::OK)
	{
		LOG("Failed to initialise Particle Manager");
		return AppStatus::ERROR;
	}

	//Create level 
    level = new TileMap();
    if (level == nullptr)
    {
        LOG("Failed to allocate memory for Level");
        return AppStatus::ERROR;
    }
	//Initialise level
	if (level->Initialise() != AppStatus::OK)
	{
		LOG("Failed to initialise Level");
		return AppStatus::ERROR;
	}
	levelInteractables = new TileMap();
	if (levelInteractables == nullptr)
	{
		LOG("Failed to allocate memory for Level");
		return AppStatus::ERROR;
	}
	if (levelInteractables->Initialise() != AppStatus::OK)
	{
		LOG("Failed to initialise Level");
		return AppStatus::ERROR;
	}
	levelHiddenBlocks = new TileMap();
	if (levelHiddenBlocks == nullptr)
	{
		LOG("Failed to allocate memory for Level");
		return AppStatus::ERROR;
	}
	if (levelHiddenBlocks->Initialise() != AppStatus::OK)
	{
		LOG("Failed to initialise Level");
		return AppStatus::ERROR;
	}
	//Load level
	if (LoadLevel(1) != AppStatus::OK)
	{
		LOG("Failed to load Level 1");
		return AppStatus::ERROR;
	}



	//Assign the tile map reference to the player to check collisions while navigating
	player->SetTileMap(level);
	//Assign the tile map reference to the shot manager to check collisions when shots are shot
	shots->SetTileMap(level);
	//Assign the shot manager reference to the enemy manager so enemies can add shots
	enemies->SetShotManager(shots);
	enemies->SetTileMap(level);
	enemies->SetParticleManager(particles);

	//Create text font 1
	font = new Text();
	if (font == nullptr)
	{
		LOG("Failed to allocate memory for font 1");
		return AppStatus::ERROR;
	}
	//Initialise text font 1
	if (font->Initialise(Resource::IMG_FONT, "img/font.png", '0', 8) != AppStatus::OK)
	{
		LOG("Failed to initialise font img");
		return AppStatus::ERROR;
	}

	fade_transition.SetScene(1, 10, 10);


    return AppStatus::OK;
}
AppStatus Scene::LoadLevel(int stage)
{
	//Rectangle src, dst;
	//float w, h;
	//w = WINDOW_WIDTH * GAME_SCALE_FACTOR;
	//h = WINDOW_HEIGHT * GAME_SCALE_FACTOR;
	//src = { 0, 0, WINDOW_WIDTH, -WINDOW_HEIGHT };
	//dst = { 0, 0, w, h };
	enemies->totalEnemies = 0;
	timer = 0;
	int size;
	int x, y, i;
	Tile tile;
	Point pos;
	int* map = nullptr;
	int* mapInteractables = nullptr;
	int* mapHiddenBlocks = nullptr;
	Object* obj;
	AABB hitbox, area;
	currentLevel = stage;

	ClearLevel();
	
	size = LEVEL_WIDTH * LEVEL_HEIGHT;
	if(stage == 1)
	{
		map = new int[size] 
		{
			
				33,		34,		35,		36,		33,		34,		35,		36,		33,		34,		35,		36,		33,		34,		35,		36,  
				29,		30,		31,		32,		29,		30,		31,		32,		29,		30,		31,		32,		29,		30,		31,		32,
				25,		26,		27,		28,		25,		26,		27,		28,		25,		26,		27,		28,		25,		26,		27,		28,
				21,		22,		23,		24,		21,		22,		23,		24,		21,		22,		23,		24,		21,		22,		23,		24,
				17,		18,		19,		20,		17,		18,		19,		20,		17,		18,		19,		20,		17,		18,		19,		20,
				13,		14,		10,		9,		12,		14,		15,		16,		13,		14,		15,		16,		12,		14,		15,		16,
				5,		6,		67,		68,		8,		7,		5,		7,		5,		7,		5,		139,	140,	7,		5,		7,
				3,		138,	65,		66,		138,	138,	4,		138,	4,		138,	4,		138,	138,	138,	3,		138,
				2,		2,		62,		63,		64,		2,		2,		2,		2,		2,		2,		2,		64,		2,		2,		2,
				1,		1,		1,		1,		1,		1,		1,		1,		1,		1,		1,		1,		1,		1,		1,		1,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0
		};
		mapInteractables = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0, 700,	138,	0,		0,		0,		0,		0,		0, 700,	0,		0,		0,
				0,		200,		0,		211,		0,		405,	404,	300,	301,	400,	401,	0,		210,	0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0
		};
		mapHiddenBlocks = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0
		};
		player->InitScore();
	}
	else if (stage == 2)
	{
		map = new int[size]
		{
				33,		34,		35,		36,		33,		34,		35,		36,		33,		34,		35,		36,		33,		34,		35,		36,
				29,		30,		31,		32,		29,		30,		31,		32,		29,		30,		31,		32,		29,		30,		31,		32,
				25,		26,		27,		28,		25,		26,		27,		28,		25,		26,		27,		28,		25,		26,		27,		28,
				21,		22,		23,		24,		21,		22,		23,		24,		21,		22,		23,		24,		21,		22,		23,		24,
				17,		18,		19,		20,		17,		18,		19,		20,		17,		18,		19,		20,		17,		18,		19,		20,
				13,		14,		10,		9,		12,		14,		15,		16,		13,		14,		15,		16,		12,		14,		15,		16,
				5,		6,		67,		68,		8,		7,		5,		7,		5,		7,		5,		139,	140,	7,		5,		7,
				3,		138,	65,		66,		138,	138,	4,		138,	4,		138,	4,		138,	138,	138,	3,		138,
				2,		2,		62,		63,		64,		2,		2,		2,		2,		2,		2,		2,		64,		2,		2,		2,
				1,		1,		1,		1,		1,		1,		1,		1,		1,		1,		1,		1,		1,		1,		1,		1,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0
		};
		mapInteractables = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		700,	0,		701,		0,		0,		0,		0,		0,		700,	0,		0,		0,
				0,		0,		0,		600,		0, 600,		0,		400,	0,		402,		0,		403,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0
		};
		mapHiddenBlocks = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0
		};
	}
	else if (stage == 3)
	{
		map = new int[size]
		{
				33,		34,		35,		36,		33,		34,		35,		36,		33,		34,		37,		38,		39,		38,		39,		38,
				29,		30,		31,		32,		29,		30,		31,		32,		29,		30,		40,		41,		42,		42,		43,		44,
				25,		26,		27,		28,		25,		26,		27,		28,		25,		26,		45,		46,		47,		48,		43,		49,
				21,		22,		23,		24,		21,		22,		23,		24,		21,		22,		40,		50,		51,		113,	52,		141,
				17,		18,		19,		20,		17,		18,		19,		20,		17,		18,		45,		53,		54,		113,	55,		56,
				13,		14,		10,		9,		12,		14,		15,		16,		13,		14,		40,		50,		51,		113,	52,		141,
				5,		6,		67,		68,		8,		7,		5,		7,		5,		7,		45,		53,		54,		113,	55,		56,
				3,		138,	65,		66,		138,	138,	4,		138,	4,		138,	57,		58,		59,		113,	60,		61,
				2,		2,		62,		63,		64,		2,		2,		2,		2,		2,		57,		142,	59,		113,	60,		143,
				1,		1,		1,		1,		1,		1,		1,		1,		1,		1,		1,		1,		1,		1,		1,		1,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0
		};
		mapInteractables = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		700, 	0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,	0,		0,		0,		0,		401,	0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0
		};
		mapHiddenBlocks = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0
		};
	}
	else if (stage == 4)
	{
		map = new int[size]
		{
				94,		95,		102,	103,	72,		72,		78,		79,		72,		82,		86,		85,		72,		72,		74,		75,
				96,		97,		104,	105,	93,		93,		93,		93,		72,		72,		72,		86,		85,		72,		72,		72,
				96,		97,		106,	107,	93,		93,		93,		93,		72,		72,		72,		82,		86,		85,		72,		72,
				96,		97,		108,	72,		93,		93,		93,		93,		72,		72,		72,		72,		72,		86,		85,		72,
				96,		97,		109,	72,		93,		93,		93,		93,		72,		72,		83,		70,		69,		70,		69,		70,
				96,		97,		110,	72,		76,		77,		72,		72,		72,		83,		84,		72,		94,		95,		80,		81,
				96,		97,		110,	72,		74,		75,		83,		70,		69,		70,		73,		72,		96,		97,		78,		79,
				96,		97,		111,	72,		72,		83,		84,		72,		72,		72,		72,		72,		96,		97,		76,		77,
				98,		97,		112,	72,		83,		84,		73,		72,		72,		72,		72,		72,		96,		97,		74,		75,
				100,	101,	72,		83,		84,		72,		72,		72,		72,		72,		72,		72,		96,		97,		72,		72,
				69,		70,		69,		70,		69,		70,		69,		70,		69,		70,		69,		70,		69,		70,		69,		70,
		};
		mapInteractables = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		701,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		701,		0,		0,		0,		0,
				0,		0,		0,		701,	0,		0,		0,		701,	0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
		};	
		mapHiddenBlocks = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0
		};
	}
	else if (stage == 5)
	{
		map = new int[size]
		{
				78,		79,		96,		97,		106,	107,	72,		72,		72,		72,		72,		72,		74,		75,		72,		72,
				76,		77,		96,		97,		111,	72,		72,		72,		93,		93,		72,		72,		72,		72,		72,		72,
				74,		75,		96,		97,		112,	72,		72,		72,		93,		93,		72,		72,		72,		72,		83,		71,
				72,		72,		100,	101,	72,		72,		72,		72,		93,		93,		72,		72,		72,		83,		84,		72,
				69,		70,		69,		70,		71,		85,		72,		72,		93,		93,		72,		72,		83,		84,		73,		72,
				72,		72,		94,		95,		72,		86,		85,		72,		72,		72,		72,		83,		84,		72,		80,		81,
				72,		72,		96,		97,		69,		70,		69,		70,		69,		70,		69,		70,		73,		72,		78,		79,
				72,		72,		96,		97,		76,		77,		69,		70,		69,		70,		72,		72,		72,		72,		76,		77,
				72,		72,		96,		97,		74,		75,		69,		70,		74,		75,		72,		72,		72,		72,		74,		75,
				72,		72,		96,		97,		72,		72,		69,		70,		72,		72,		72,		72,		72,		72,		72,		72,
				69,		70,		69,		70,		69,		70,		69,		70,		69,		70,		69,		70,		69,		70,		69,		70,
		};
		mapInteractables = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		701,	0,		0,		0,		0,		701,	0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		211,	0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		701,	0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		403,	0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		402,	0,		0,		0,		0,		0,		0,		600,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
		};
		mapHiddenBlocks = new int[size]
			{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		702,	0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		702,	0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
			};
	}
	else if (stage == 6)
	{
		map = new int[size]
		{
				74,		75,		72,		72,		83,		84,		73,		72,		72,		72,		78,		79,		94,		95,		102,	103,
				72,		72,		72,		83,		84,		72,		72,		72,		72,		72,		76,		77,		96,		97,		104,	105,
				69,		70,		69,		70,		69,		70,		71,		85,		72,		72,		74,		75,		96,		97,		106,	107,
				94,		95,		76,		77,		72,		72,		72,		86,		85,		72,		72,		72,		96,		97,		108,	72,
				96,		97,		74,		75,		72,		72,		72,		82,		86,		85,		72,		72,		96,		97,		109,	72,
				96,		97,		72,		72,		72,		72,		72,		72,		72,		86,		85,		72,		98,		97,		110,	72,
				96,		97,		69,		70,		69,		70,		83,		71,		69,		70,		69,		70,		99,		97,		110,	72,
				96,		97,		72,		72,		72,		83,		72,		72,		72,		72,		76,		77,		96,		97,		111,	72,
				98,		97,		72,		72,		83,		84,		73,		72,		72,		72,		74,		75,		96,		97,		112,	72,
				100,	101,	72,		83,		84,		72,		72,		72,		72,		72,		72,		72,		100,	101,	72,		72,
				69,		70,		69,		70,		69,		70,		69,		70,		69,		70,		69,		70,		69,		70,		69,		70,
		};
		mapInteractables = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0, 210,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		701,		0,		0,		0,		0,
				0,		0,		0,		0,		701,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		600,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		701,		0,		0,		0,		0,		0,		701,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
		};
		mapHiddenBlocks = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0
		};
	}
	else if (stage == 7)
	{
		map = new int[size]
		{
				94,		95,		102,	103,	72,		72,		78,		79,		94,		95,		106,	107,	72,		72,		74,		75,
				96,		97,		104,	105,	72,		72,		76,		77,		96,		97,		111,	72,		72,		72,		72,		72,
				96,		97,		106,	107,	72,		72,		74,		75,		96,		97,		112,	72,		72,		72,		72,		72,
				96,		97,		108,	72,		93,		93,		72,		72,		96,		97,		80,		81,		93,		93,		72,		72,
				96,		97,		109,	72,		93,		93,		72,		72,		96,		97,		78,		79,		93,		93,		72,		72,
				96,		97,		110,	72,		93,		93,		72,		72,		96,		97,		76,		77,		93,		93,		72,		72,
				96,		97,		110,	72,		93,		93,		72,		72,		96,		97,		74,		75,		93,		93,		72,		72,
				96,		97,		111,	72,		93,		93,		72,		72,		96,		97,		72,		72,		93,		93,		72,		72,
				96,		97,		112,	72,		93,		93,		72,		72,		96,		97,		72,		72,		93,		93,		72,		72,
				100,	101,	72,		72,		72,		72,		72,		72,		100,	101,	72,		72,		72,		72,		72,		72,
				69,		70,		69,		70,		69,		70,		69,		70,		69,		70,		69,		70,		69,		70,		69,		70,
		};
		mapInteractables = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		701,		0,		0,		0,		701,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
		};
		mapHiddenBlocks = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0
		};
	}
	else if (stage == 9)
	{
		map = new int[size]
		{
				72,		72,		94,		95,		106,	107,	72,		72,		78,		79,		72,		72,		94,		95,		102,	103,
				80,		81,		96,		97,		108,	72,		93,		93,		93,		93,		72,		72,		96,		97,		104,	105,
				78,		79,		96,		97,		109,	72,		93,		93,		93,		93,		72,		72,		96,		97,		106,	107,
				76,		77,		96,		97,		111,	72,		93,		93,		93,		93,		72,		72,		96,		97,		108,	72,
				74,		75,		98,		97,		112,	72,		93,		93,		93,		93,		72,		72,		96,		97,		109,	72,
				72,		72,		100,	101,	72,		72,		76,		77,		72,		72,		80,		81,		96,		97,		111,	72,
				69,		70,		69,		70,		71,		85,		74,		75,		72,		72,		78,		79,		96,		97,		112,	72,
				72,		72,		76,		77,		72,		86,		85,		72,		72,		72,		76,		77,		98,		97,		72,		72,
				72,		72,		74,		75,		72,		82,		86,		85,		72,		72,		74,		75,		99,		97,		72,		72,
				72,		72,		72,		72,		72,		72,		72,		86,		85,		72,		72,		72,		100,	101,	72,		72,
				69,		70,		69,		70,		69,		70,		69,		70,		69,		70,		71,		85,		69,		70,		69,		70,
		};
		mapInteractables = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		701,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		701,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
		};
		mapHiddenBlocks = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0
		};
	}
	else if (stage == 8)
	{
		map = new int[size]
		{
				69,		70,		72,		72,		94,		95,		72,		72,		72,		72,		72,		72,		74,		75,		94,		95,
				69,		70,		72,		72,		96,		97,		72,		72,		72,		72,		72,		72,		80,		81,		96,		97,
				69,		70,		69,		70,		96,		97,		69,		70,		71,		85,		72,		72,		78,		79,		96,		97,
				69,		70,		72,		72,		96,		97,		76,		77,		72,		86,		85,		72,		76,		77,		96,		97,
				69,		70,		72,		72,		96,		97,		74,		75,		72,		82,		86,		85,		74,		75,		96,		97,
				69,		70,		72,		72,		96,		97,		72,		72,		80,		81,		72,		86,		85,		72,		96,		97,
				69,		70,		69,		70,		69,		70,		69,		70,		78,		79,		72,		82,		69,		70,		69,		70,
				69,		70,		76,		77,		94,		95,		72,		72,		76,		77,		72,		72,		72,		72,		94,		95,
				69,		70,		74,		75,		96,		97,		72,		72,		74,		75,		72,		72,		72,		72,		96,		97,
				69,		70,		72,		72,		100,	101,	72,		72,		72,		72,		72,		72,		72,		72,		100,	101,
				69,		70,		69,		70,		69,		70,		69,		70,		69,		70,		69,		70,		69,		70,		69,		70,
		};
		mapInteractables = new int[size]
		{
				0,		0,		0,		701,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		600,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		701,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		701,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		600,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		701,	0,		0,		0,		701,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		402,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
		};
		mapHiddenBlocks = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0
		};
	}
	else if (stage == 10)
	{
		map = new int[size]
		{
				72,		72,		74,		75,		94,		95,		102,	103,	72,		72,		78,		79,		72,		72,		78,		79,
				80,		81,		72,		72,		96,		97,		104,	105,	72,		72,		93,		93,		72,		72,		93,		93,
				78,		79,		72,		72,		96,		97,		106,	107,	72,		72,		93,		93,		72,		72,		93,		93,
				93,		93,		72,		72,		96,		97,		108,	72,		80,		81,		93,		93,		72,		72,		93,		93,
				93,		93,		72,		72,		96,		97,		109,	72,		78,		79,		93,		93,		72,		72,		93,		93,
				93,		93,		80,		81,		96,		97,		110,	72,		76,		77,		72,		72,		72,		72,		72,		72,
				93,		93,		78,		79,		96,		97,		110,	72,		74,		75,		83,		71,		69,		70,		69,		70,
				93,		93,		76,		77,		96,		97,		111,	72,		72,		83,		84,		72,		76,		77,		72,		72,
				93,		93,		74,		75,		96,		97,		112,	72,		83,		84,		73,		72,		74,		75,		72,		72,
				72,		72,		72,		72,		100,	101,	72,		83,		84,		72,		72,		72,		72,		72,		72,		72,
				69,		70,		69,		70,		69,		70,		69,		70,		69,		70,		69,		70,		69,		70,		69,		70,
		};
		mapInteractables = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		701,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		701,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
		};
		mapHiddenBlocks = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0
		};
	}
	else if (stage == 11)
	{
		map = new int[size]
		{
				94,		95,		102,	103,	72,		72,		78,		79,		72,		72,		72,		72,		78,		79,		69,		70,
				96,		97,		104,	105,	80,		81,		93,		93,		72,		72,		72,		72,		76,		77,		113,	113,
				96,		97,		106,	107,	78,		79,		93,		93,		72,		72,		72,		72,		74,		75,		113,	113,
				98,		97,		111,	72,		76,		77,		93,		93,		72,		72,		72,		72,		72,		72,		113,	113,
				99,		97,		112,	72,		74,		75,		93,		93,		72,		72,		83,		71,		69,		70,		69,		70,
				96,		97,		72,		72,		72,		72,		72,		72,		72,		83,		84,		72,		80,		81,		69,		70,
				69,		70,		69,		70,		69,		70,		69,		70,		69,		70,		73,		72,		78,		79,		69,		70,
				94,		95,		76,		77,		72,		72,		72,		72,		76,		77,		72,		72,		76,		77,		69,		70,
				96,		97,		74,		75,		72,		72,		72,		72,		74,		75,		72,		72,		69,		70,		69,		70,
				100,	101,	72,		72,		72,		72,		72,		72,		72,		72,		72,		72,		69,		70,		69,		70,
				69,		70,		69,		70,		83,		71,		69,		70,		69,		70,		69,		70,		69,		70,		69,		70,
		};
		mapInteractables = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,	 211,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		402,	0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		701,	0,		0,		0,		701,	0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
		};
		mapHiddenBlocks = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0
		};
	}
		else if (stage == 12)
	{
		map = new int[size]
		{
				96, 97, 113, 127, 114, 116, 119, 118, 114, 114, 113, 127, 113, 127, 96, 97,
					96, 97, 114, 114, 114, 119, 118, 114, 114, 114, 114, 114, 114, 114, 96, 97,
					96, 97, 114, 114, 119, 118, 114, 114, 114, 114, 69, 70, 69, 70, 69, 70,
					96, 97, 114, 119, 118, 114, 114, 114, 114, 115, 69, 70, 69, 70, 69, 70,
					69, 70, 69, 70, 69, 70, 114, 114, 114, 116, 114, 114, 114, 114, 69, 70,
					96, 97, 114, 115, 114, 114, 114, 117, 114, 114, 114, 114, 114, 114, 69, 70,
					96, 97, 114, 116, 114, 114, 119, 71, 69, 70, 69, 70, 69, 70, 69, 70,
					96, 97, 114, 114, 114, 119, 118, 114, 69, 70, 69, 70, 69, 70, 69, 70,
					98, 97, 114, 114, 119, 118, 114, 114, 114, 114, 114, 114, 114, 114, 69, 70,
					100, 101, 114, 119, 118, 114, 114, 114, 114, 114, 114, 114, 114, 114, 69, 70,
					69, 70, 71, 120, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70
		};
		mapInteractables = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		701,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		701,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
		};
		mapHiddenBlocks = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0
		};
	}
	else if (stage == 13)
	{
		map = new int[size]
		{
				114, 114, 96, 97, 114, 114, 114, 116, 69, 70, 69, 70, 96, 97, 114, 114,
					114, 114, 96, 97, 114, 117, 118, 114, 69, 70, 69, 70, 98, 97, 118, 114,
					114, 114, 96, 97, 114, 114, 114, 114, 69, 70, 114, 114, 99, 97, 114, 114,
					114, 117, 96, 97, 114, 114, 114, 114, 69, 70, 114, 114, 96, 97, 114, 114,
					69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70,
					128, 129, 128, 129, 114, 114, 128, 129, 128, 129, 114, 115, 128, 129, 128, 129,
					113, 127, 113, 127, 114, 114, 113, 127, 113, 127, 114, 116, 113, 127, 113, 127,
					114, 114, 114, 117, 114, 114, 114, 114, 114, 117, 114, 114, 114, 117, 118, 114,
					69, 70, 69, 70, 69, 70, 69, 70, 119, 71, 69, 70, 69, 70, 69, 70,
					126, 114, 126, 114, 126, 114, 114, 119, 118, 114, 126, 114, 126, 114, 126, 114,
					114, 114, 114, 114, 114, 114, 119, 118, 114, 114, 114, 114, 114, 114, 114, 114
		};
		mapInteractables = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
		};
		mapHiddenBlocks = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0
		};
	}
			else if (stage == 14)
	{
		map = new int[size]
		{
				114, 116, 96, 97, 114, 114, 114, 114, 114, 114, 96, 97, 114, 114, 114, 114,
					114, 114, 96, 97, 114, 114, 114, 114, 114, 115, 96, 97, 114, 117, 118, 114,
					114, 114, 96, 97, 114, 114, 114, 114, 114, 116, 96, 97, 114, 114, 114, 114,
					118, 114, 96, 97, 114, 114, 114, 114, 114, 117, 96, 97, 114, 114, 114, 114,
					69, 70, 69, 70, 71, 145, 114, 114, 69, 70, 69, 70, 69, 70, 69, 70,
					128, 129, 128, 129, 114, 117, 145, 114, 128, 129, 128, 129, 128, 129, 114, 117,
					113, 127, 113, 127, 114, 114, 117, 145, 113, 127, 113, 127, 113, 127, 114, 114,
					114, 117, 118, 114, 118, 114, 114, 117, 145, 114, 114, 117, 118, 114, 114, 114,
					69, 70, 69, 70, 114, 114, 114, 114, 117, 145, 114, 114, 69, 70, 69, 70,
					126, 114, 126, 114, 114, 117, 118, 114, 114, 117, 145, 114, 126, 114, 126, 114,
					114, 114, 114, 114, 69, 70, 69, 70, 69, 70, 69, 70, 114, 114, 114, 114
		};
		mapInteractables = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
		};
		mapHiddenBlocks = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0
		};
	}
		else if (stage == 15)
	{
		map = new int[size]
		{
				69, 70, 117, 120, 113, 113, 96, 97, 113, 113, 113, 113, 96, 97, 113, 127,
					69, 70, 114, 117, 120, 113, 96, 97, 113, 113, 113, 113, 98, 97, 114, 115,
					69, 70, 114, 114, 117, 120, 98, 97, 113, 113, 113, 113, 99, 97, 114, 116,
					69, 70, 114, 115, 114, 117, 69, 70, 113, 113, 113, 113, 96, 97, 118, 114,
					69, 70, 114, 116, 114, 114, 124, 125, 113, 113, 113, 113, 96, 97, 114, 114,
					69, 70, 69, 70, 69, 70, 98, 97, 69, 70, 113, 113, 69, 70, 69, 70,
					124, 125, 131, 144, 131, 144, 99, 97, 131, 144, 113, 113, 124, 125, 121, 121,
					96, 97, 132, 132, 132, 132, 96, 97, 132, 132, 113, 113, 96, 97, 121, 121,
					98, 97, 130, 130, 130, 130, 98, 97, 130, 130, 130, 130, 98, 97, 121, 121,
					133, 134, 133, 134, 133, 134, 133, 134, 133, 134, 133, 134, 133, 134, 133, 134,
					135, 136, 135, 136, 135, 136, 135, 136, 135, 136, 135, 136, 135, 136, 135, 136
		};
		mapInteractables = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		701,		0,
				0,		0,		0,		0,		701,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
		};
		mapHiddenBlocks = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0
		};
	}
			else if (stage == 16)
	{
		map = new int[size]
		{
				113, 127, 113, 127, 113, 127, 113, 127, 96, 97, 113, 127, 113, 127, 69, 70,
					118, 114, 114, 117, 114, 115, 114, 114, 96, 97, 126, 114, 114, 114, 156, 157,
					69, 70, 69, 70, 114, 116, 114, 114, 96, 97, 114, 114, 114, 114, 156, 157,
					69, 70, 69, 70, 114, 114, 114, 114, 96, 97, 114, 115, 114, 114, 158, 159,
					69, 70, 114, 114, 114, 114, 114, 114, 96, 97, 114, 116, 69, 70, 69, 70,
					69, 70, 114, 114, 114, 114, 114, 114, 96, 97, 114, 114, 126, 114, 126, 114,
					69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 71, 145, 114, 114, 114, 114,
					69, 70, 69, 70, 69, 70, 69, 70, 96, 97, 114, 117, 145, 114, 114, 115,
					69, 70, 114, 114, 114, 114, 114, 114, 96, 97, 114, 114, 117, 145, 114, 116,
					69, 70, 114, 114, 114, 114, 114, 114, 100, 101, 118, 114, 114, 117, 145, 114,
					69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 119, 71, 69, 70
		};
		mapInteractables = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		600,		0,		0,		0,		0,		0,		701,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
		};
		mapHiddenBlocks = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0
		};
	}
		else if (stage == 17)
	{
		map = new int[size]
		{
				113, 127, 96, 97, 113, 127, 113, 127, 114, 114, 113, 127, 119, 118, 69, 70,
					118, 114, 96, 97, 118, 114, 114, 115, 114, 114, 114, 119, 118, 114, 69, 70,
					114, 114, 96, 97, 114, 114, 114, 116, 114, 114, 119, 118, 114, 114, 69, 70,
					114, 117, 96, 97, 118, 114, 114, 114, 114, 119, 118, 114, 114, 115, 69, 70,
					114, 114, 98, 97, 114, 114, 114, 114, 119, 118, 114, 114, 114, 116, 69, 70,
					69, 70, 69, 70, 114, 114, 114, 119, 118, 114, 69, 70, 114, 114, 69, 70,
					121, 121, 124, 125, 122, 121, 69, 70, 122, 123, 121, 121, 122, 121, 69, 70,
					121, 121, 96, 97, 113, 113, 113, 113, 113, 113, 113, 113, 69, 70, 69, 70,
					121, 121, 98, 97, 130, 130, 130, 130, 130, 130, 130, 130, 121, 121, 121, 121,
					133, 134, 133, 134, 133, 134, 133, 134, 133, 134, 69, 70, 133, 134, 133, 134,
					135, 136, 135, 136, 135, 136, 135, 136, 135, 136, 135, 136, 135, 136, 135, 136
		};
		mapInteractables = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		701,		0,		0,		0,		0,		0,		0,		701,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
		};
		mapHiddenBlocks = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0
		};
	}
			else if (stage == 18)
	{
		map = new int[size]
		{
				94, 95, 74, 75, 72, 72, 72, 72, 72, 72, 78, 79, 72, 72, 94, 95,
					98, 97, 72, 72, 72, 72, 72, 72, 72, 72, 93, 93, 72, 72, 96, 97,
					99, 97, 72, 72, 83, 71, 69, 70, 72, 72, 93, 93, 72, 72, 96, 97,
					96, 97, 72, 83, 84, 72, 72, 72, 72, 72, 93, 93, 72, 72, 96, 97,
					69, 70, 69, 70, 73, 72, 72, 72, 72, 72, 93, 93, 72, 72, 96, 97,
					96, 97, 76, 77, 72, 72, 72, 72, 72, 72, 76, 77, 80, 81, 96, 97,
					96, 97, 74, 75, 69, 70, 69, 70, 71, 85, 74, 75, 78, 79, 96, 97,
					96, 97, 72, 72, 76, 77, 72, 72, 72, 86, 85, 72, 76, 77, 96, 97,
					98, 97, 72, 72, 74, 75, 72, 72, 72, 82, 86, 85, 74, 75, 98, 97,
					100, 101, 72, 72, 72, 72, 72, 72, 72, 72, 72, 86, 85, 72, 100, 101,
					69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 83, 71, 69, 70, 69, 70
		};
		mapInteractables = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		701,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		600,	0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		701,	0,		0,		0,		0,		701,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		402,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
		};
		mapHiddenBlocks = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0
		};
	}
		else if (stage == 19)
	{
		map = new int[size]
		{
				94, 95, 102, 103, 88, 72, 72, 87, 88, 72, 72, 87, 88, 72, 72, 87,
					96, 97, 104, 105, 93, 93, 93, 93, 80, 81, 72, 72, 72, 72, 72, 72,
					96, 97, 106, 107, 93, 93, 93, 93, 78, 79, 72, 72, 83, 71, 69, 70,
					96, 97, 108, 72, 93, 93, 93, 93, 76, 77, 72, 83, 84, 72, 76, 77,
					96, 97, 109, 72, 93, 93, 93, 93, 74, 75, 83, 84, 73, 72, 74, 75,
					96, 97, 110, 72, 76, 77, 72, 72, 72, 83, 84, 72, 72, 72, 72, 72,
					96, 97, 110, 72, 74, 75, 83, 71, 69, 70, 73, 72, 72, 72, 69, 70,
					96, 97, 111, 72, 72, 83, 84, 72, 72, 72, 72, 72, 72, 72, 72, 72,
					96, 97, 112, 72, 83, 84, 73, 72, 72, 72, 69, 70, 71, 85, 72, 72,
					100, 101, 72, 83, 84, 72, 72, 72, 72, 72, 72, 72, 72, 86, 85, 72,
					69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70
		};
		mapInteractables = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		701,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		701,		0,		0,		0,		0,		402,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
		};
		mapHiddenBlocks = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0
		};
	}
			else if (stage == 20)
	{
		map = new int[size]
		{
				72, 87, 88, 72, 72, 87, 88, 72, 72, 87, 88, 72, 72, 87, 94, 95,
					72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 96, 97,
					69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 96, 97,
					76, 77, 72, 72, 72, 72, 76, 77, 69, 70, 69, 70, 72, 72, 96, 97,
					74, 75, 72, 72, 72, 72, 74, 75, 69, 70, 146, 75, 72, 72, 96, 97,
					72, 72, 80, 81, 72, 72, 72, 72, 69, 70, 72, 72, 72, 72, 96, 97,
					69, 70, 78, 79, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70,
					72, 72, 76, 77, 80, 81, 76, 77, 69, 70, 69, 70, 76, 77, 94, 95,
					72, 72, 74, 75, 78, 79, 74, 75, 69, 70, 146, 75, 74, 75, 96, 97,
					72, 72, 72, 72, 72, 72, 72, 72, 69, 70, 72, 72, 72, 72, 100, 101,
					69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70
		};
		mapInteractables = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		600,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		701,	0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		402,		0,		0,		0,		0,		600,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
		};
		mapHiddenBlocks = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0
		};
	}
		else if (stage == 21)
	{
		map = new int[size]
		{
				102, 103, 72, 87, 94, 95, 88, 72, 72, 87, 94, 95, 106, 107, 74, 75,
					104, 105, 91, 92, 96, 97, 89, 90, 91, 92, 98, 97, 111, 72, 72, 72,
					106, 107, 72, 87, 96, 97, 88, 72, 72, 87, 99, 97, 112, 72, 72, 72,
					111, 72, 72, 72, 96, 97, 80, 81, 72, 72, 96, 97, 72, 72, 72, 72,
					112, 72, 72, 72, 96, 97, 78, 79, 72, 72, 96, 97, 69, 70, 69, 70,
					72, 72, 72, 72, 96, 97, 76, 77, 72, 72, 96, 97, 80, 81, 72, 72,
					69, 70, 72, 72, 96, 97, 74, 75, 72, 72, 96, 97, 78, 79, 72, 72,
					76, 77, 72, 72, 96, 97, 72, 72, 72, 72, 96, 97, 76, 77, 72, 72,
					74, 75, 72, 72, 98, 97, 72, 72, 72, 72, 98, 97, 74, 75, 72, 72,
					72, 72, 72, 72, 100, 101, 72, 72, 72, 72, 100, 101, 72, 72, 72, 72,
					69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70
		};
		mapInteractables = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		701,		0,		0,		0,		0,		0,		0,		0,		0,		402,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		701,		0,		0,		701,		0,		0,		701,		0,		0,		701,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
		};
	}
			else if (stage == 22)
	{
		map = new int[size]
		{
				69, 70, 94, 95, 102, 103, 74, 75, 72, 72, 83, 84, 94, 95, 69, 70,
					69, 70, 96, 97, 104, 105, 72, 72, 72, 83, 84, 72, 98, 97, 69, 70,
					69, 70, 96, 97, 106, 107, 72, 72, 83, 84, 73, 72, 99, 97, 69, 70,
					69, 70, 96, 97, 111, 72, 72, 83, 84, 72, 80, 81, 96, 97, 69, 70,
					69, 70, 69, 70, 112, 72, 83, 84, 73, 72, 78, 79, 96, 97, 69, 70,
					69, 70, 96, 97, 72, 83, 84, 72, 72, 72, 76, 77, 96, 97, 69, 70,
					69, 70, 96, 97, 69, 70, 71, 85, 72, 72, 74, 75, 96, 97, 156, 157,
					69, 70, 96, 97, 76, 77, 72, 86, 85, 72, 72, 72, 96, 97, 156, 157,
					69, 70, 96, 97, 74, 75, 72, 82, 86, 85, 72, 72, 98, 97, 158, 159,
					69, 70, 100, 101, 72, 72, 72, 72, 72, 86, 85, 72, 100, 101, 69, 70,
					69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70
		};
		mapInteractables = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		600,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		600,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
		};
		mapHiddenBlocks = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0
		};
	}
	else if (stage == 23)
	{
		map = new int[size]
		{
				114, 114, 94, 95, 114, 116, 114, 114, 94, 95, 114, 114, 114, 114, 94, 95,
					121, 121, 98, 97, 121, 121, 121, 121, 96, 97, 121, 121, 121, 121, 96, 97,
					121, 121, 99, 97, 121, 121, 121, 121, 96, 97, 121, 121, 121, 121, 96, 97,
					121, 121, 96, 97, 121, 121, 121, 121, 98, 97, 121, 121, 121, 121, 96, 97,
					121, 121, 96, 97, 121, 121, 121, 121, 99, 97, 121, 121, 121, 121, 96, 97,
					114, 115, 96, 97, 114, 115, 114, 117, 96, 97, 118, 114, 114, 117, 96, 97,
					114, 116, 96, 97, 114, 116, 114, 114, 96, 97, 114, 114, 119, 71, 69, 70,
					128, 129, 96, 97, 128, 129, 128, 129, 96, 97, 114, 119, 118, 114, 96, 97,
					113, 127, 98, 97, 113, 127, 113, 127, 96, 97, 69, 70, 114, 114, 98, 97,
					114, 117, 100, 101, 118, 114, 114, 114, 100, 101, 118, 114, 114, 117, 100, 101,
					69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70
		};
		mapInteractables = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		701,		0,		0,		701,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		500,	0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
		};
		mapHiddenBlocks = new int[size]
		{
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,
				0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0,		0
		};
	}
	else
	{
		//Error level doesn't exist or incorrect level number
		LOG("Failed to load level, stage %d doesn't exist", stage);
		return AppStatus::ERROR;
	}

	//Tile map
	level->Load(map, LEVEL_WIDTH, LEVEL_HEIGHT); // REVIEW: this wasn't here in the prototype
	levelInteractables->Load(mapInteractables, LEVEL_WIDTH, LEVEL_HEIGHT); // REVIEW: this wasn't here in the prototype
	levelHiddenBlocks->Load(mapHiddenBlocks, LEVEL_WIDTH, LEVEL_HEIGHT); // REVIEW: this wasn't here in the prototype

	
	//Entities and objects
	i = 0;
	for (y = 0; y < LEVEL_HEIGHT; ++y)
	{
		for (x = 0; x < LEVEL_WIDTH; ++x)
		{
			tile = (Tile)mapInteractables[i];
			pos.x = x * TILE_SIZE;
			pos.y = y * TILE_SIZE + TILE_SIZE - 1;
			//tile = (Tile)map[i]; // Commenting this for testing
			// TESTING
			if (tile == Tile::PLAYER)
			{
				player->SetPos(pos);
			}
			else if (tile == Tile::ITEM_SHIELD)
			{
				obj = new Object(pos, ObjectType::SHIELD);
				objects.push_back(obj);
				map[i] = 0;
			}
			else if (tile == Tile::ITEM_WHITEBAG)
			{
				obj = new Object(pos, ObjectType::WHITEBAG);
				objects.push_back(obj);
				map[i] = 0;
			}
			else if (tile == Tile::ITEM_BLUEBAG)
			{
				obj = new Object(pos, ObjectType::BLUEBAG);
				objects.push_back(obj);
				map[i] = 0;
			}
			else if (tile == Tile::ITEM_ORB)
			{
				obj = new Object(pos, ObjectType::ORB);
				objects.push_back(obj);
				map[i] = 0;
			}
			else if (tile == Tile::ITEM_HEART)
			{
				obj = new Object(pos, ObjectType::HEART);
				objects.push_back(obj);
				map[i] = 0;
			}
			else if (tile == Tile::ITEM_BIGHEART)
			{
				obj = new Object(pos, ObjectType::BIGHEART);
				objects.push_back(obj);
				map[i] = 0;
			}
			else if (tile == Tile::ITEM_WHITEKEY)
			{
				obj = new Object(pos, ObjectType::WHITEKEY);
				objects.push_back(obj);
				map[i] = 0;
			}
			else if (tile == Tile::ITEM_YELLOWKEY)
			{
				obj = new Object(pos, ObjectType::YELLOWKEY);
				objects.push_back(obj);
				map[i] = 0;
			}
			else if (tile == Tile::ITEM_MORNING_STAR)
			{
				obj = new Object(pos, ObjectType::MORNINGSTAR);
				objects.push_back(obj);
				map[i] = 0;
			}
			else if (tile == Tile::ITEM_CHEST)
			{
				obj = new Object(pos, ObjectType::CHEST);
				objects.push_back(obj);
				map[i] = 0;
			}
			else if (tile == Tile::ZOMBIE)
			{
				pos.x += (ZOMBIE_FRAME_SIZE_WIDTH - ZOMBIE_PHYSICAL_WIDTH) / 2;
				hitbox = enemies->GetEnemyHitBox(pos, EnemyType::ZOMBIE);
				area = level->GetSweptAreaX(hitbox);
				enemies->Add(pos, EnemyType::ZOMBIE, area);
				enemies->totalEnemies++;
			}
			else if (tile == Tile::BLACKLEOPARD_LEFT)
			{
				pos.x += (ZOMBIE_FRAME_SIZE_WIDTH - ZOMBIE_PHYSICAL_WIDTH) / 2;
				hitbox = enemies->GetEnemyHitBox(pos, EnemyType::BLACKLEOPARD);
				area = level->GetSweptAreaX(hitbox);
				enemies->Add(pos, EnemyType::BLACKLEOPARD, area, Look::LEFT);
				enemies->totalEnemies++;
			}
			else if (tile == Tile::BLACKLEOPARD_RIGHT)
			{
				pos.x += (ZOMBIE_FRAME_SIZE_WIDTH - ZOMBIE_PHYSICAL_WIDTH) / 2;
				hitbox = enemies->GetEnemyHitBox(pos, EnemyType::BLACKLEOPARD);
				area = level->GetSweptAreaX(hitbox);
				enemies->Add(pos, EnemyType::BLACKLEOPARD, area, Look::RIGHT);
				enemies->totalEnemies++;
			}
			else if (tile == Tile::PYRE)
			{
				/*pos.x += (PYRE_PHYSICAL_SIZE - PYRE_PHYSICAL_SIZE) / 2;*/
				hitbox = enemies->GetEnemyHitBox(pos, EnemyType::PYRE);
				/*area = level->GetSweptAreaX(hitbox);*/
				enemies->Add(pos, EnemyType::PYRE, area, Look::RIGHT);
			}
			else if (tile == Tile::CANDLE)
			{
				hitbox = enemies->GetEnemyHitBox(pos, EnemyType::CANDLE);
				enemies->Add(pos, EnemyType::CANDLE, area, Look::RIGHT);
			}
			//else if (tile == Tile::BLOCKS)
			//{
			//	hitbox = enemies->GetEnemyHitBox(pos, EnemyType::BLOCKS);
			//	enemies->Add(pos, EnemyType::BLOCKS, area, Look::RIGHT);
			//}
			else
			{
				//LOG("Internal error loading scene: invalid entity or object tile id")
			}
				++i;
			}
		}

		i = 0;
		for (y = 0; y < LEVEL_HEIGHT; ++y)
		{
			for (x = 0; x < LEVEL_WIDTH; ++x)
			{
				tile = (Tile)mapHiddenBlocks[i];
				pos.x = x * TILE_SIZE;
				pos.y = y * TILE_SIZE + TILE_SIZE - 1;

				if (tile == Tile::BLOCKS)
				{
					hitbox = enemies->GetEnemyHitBox(pos, EnemyType::BLOCKS);
					enemies->Add(pos, EnemyType::BLOCKS, area, Look::RIGHT);
				}
				else
				{
					//LOG("Internal error loading hidden block scene: invalid entity or object tile id")
				}
				++i;
			}
		}


	//Remove initial positions of objects and entities from the map
	level->ClearObjectEntityPositions();
	levelInteractables->ClearObjectEntityPositions();
	levelHiddenBlocks->ClearObjectEntityPositions();


	//level->Load(mapInteractables, LEVEL_WIDTH, LEVEL_HEIGHT);
	delete[] mapInteractables;
	delete[] map;
	delete[] mapHiddenBlocks;

	return AppStatus::OK;
}
void Scene::Update()
{
	timer++;
	if (timer == 4294967290)
	{
		timer = 0;
	}

	if (player->GetHasDied() == true)
	{
		ResetScreenTimer();

		if (timerComparision + 180 == timer)
			ResetScreen();
	}

	Point p1, p2;
	AABB hitbox;
	AABB weaponHitbox;
	if (fade_transition.IsActive())
	{
		fade_transition.Update();
	}
	else
	{
		if (player->GetXPos() <= 0)
		{
			switch (currentLevel)
			{
			case 1:
			case 12:
			{
				int tmpYPos = player->GetYPos();
				player->SetPos(Point(0, tmpYPos));
				break;
			}
			case 2:
			case 3:
			case 5:
			case 6:
			case 7:
			case 9:
			case 10:
			case 11:
			{
				fade_transition.SetScene(currentLevel + 1, currentLevel, 10, 10);
				int tmpYPos = player->GetYPos();
				LoadLevel(--currentLevel);
				player->SetPos(Point(WINDOW_WIDTH - (PLAYER_PHYSICAL_WIDTH + 10), tmpYPos));
				break;
			}
			case 4:
			{
				fade_transition.SetScene(currentLevel + 1, currentLevel, 10, 10);
				int tmpYPos = player->GetYPos();
				currentLevel = 7;
				LoadLevel(currentLevel);
				player->SetPos(Point(WINDOW_WIDTH - (PLAYER_PHYSICAL_WIDTH + 10), tmpYPos));
				break;
			}
			default:
				break;
			}

		}
		else if (player->GetXPos() >= WINDOW_WIDTH - PLAYER_PHYSICAL_WIDTH)
		{
			switch (currentLevel)
			{
			case 1:
			case 2:
			case 4:
			case 5:
			case 6:
			case 8:
			case 9:
			case 10:
			case 11:
			{
				fade_transition.SetScene(currentLevel + 1, currentLevel, 10, 10);
				int tmpYPos = player->GetYPos();
				LoadLevel(++currentLevel);
				player->SetPos(Point(10, tmpYPos));
				break;
			}
			case 3:
			{
				fade_transition.SetScene(currentLevel + 1, currentLevel, 10, 10);
				int tmpYPos = player->GetYPos() + 16;
				LoadLevel(++currentLevel);
				player->SetPos(Point(10, tmpYPos));
				break;
			}
			case 7:
			{
				fade_transition.SetScene(currentLevel + 1, currentLevel, 10, 10);
				int tmpYPos = player->GetYPos();
				currentLevel = 4;
				LoadLevel(currentLevel);
				player->SetPos(Point(10, tmpYPos));
				break;
			}
			default:
				break;
			}
		}
		// TODO: Add it for level 4

		//ResetScreen(); // REVIEW: this wasn't commented pre-prototype

		level->Update();
		levelInteractables->Update();
		levelHiddenBlocks->Update();
		player->Update();
		CheckObjectCollisions();

		hitbox = player->GetHitbox();
		weaponHitbox = player->GetWeaponHitBox();
		enemies->Update(hitbox, weaponHitbox, player->score);
		shots->Update(hitbox);
		particles->Update();


		//Switch between the different debug modes: off, on (sprites & hitboxes), on (hitboxes) 
		if (IsKeyPressed(KEY_F1))
		{
			debug = (DebugMode)(((int)debug + 1) % (int)DebugMode::SIZE);
		}
		else if (IsKeyPressed(KEY_F2))
		{
			player->GodMode();
		}
		else if (IsKeyPressed(KEY_KP_1) || IsKeyPressed(KEY_ONE))
		{
			fade_transition.SetScene(1, currentLevel, 10, 10);
			LoadLevel(1);
			player->SetPos(Point(20, 150));
			currentLevel = 1;
		}
		else if (IsKeyPressed(KEY_KP_2) || IsKeyPressed(KEY_TWO))
		{
			//fade_transition.SetScene(1);
			fade_transition.SetScene(currentLevel, 2, 10, 10);
			currentLevel = 2;
			LoadLevel(2);
			player->SetPos(Point(20, 150));
		}
		else if (IsKeyPressed(KEY_KP_3) || IsKeyPressed(KEY_THREE))
		{
			fade_transition.SetScene(currentLevel, 3, 10, 10);
			currentLevel = 3;
			LoadLevel(3);
			player->SetPos(Point(20, 150));

		}
		else if (IsKeyPressed(KEY_KP_4) || IsKeyPressed(KEY_FOUR))
		{
			//Idk if order is relevant
			LoadLevel(4);
			currentLevel = 4;
			player->SetPos(Point(20, 166));
			fade_transition.SetScene(currentLevel, 4, 10, 10);
		}
		else if (IsKeyPressed(KEY_KP_5) || IsKeyPressed(KEY_FIVE))
		{
			fade_transition.SetScene(5, currentLevel, 10, 10);
			LoadLevel(5);
			player->SetPos(Point(20, 166));
			currentLevel = 5;
		}
		else if (IsKeyPressed(KEY_KP_6) || IsKeyPressed(KEY_SIX))
		{
			fade_transition.SetScene(5, currentLevel, 10, 10);
			LoadLevel(6);
			player->SetPos(Point(20, 166));
			currentLevel = 6;
		}
		else if (IsKeyPressed(KEY_P))
		{
			fade_transition.SetScene(5, currentLevel, 10, 10);
			LoadLevel(++currentLevel);
			player->SetPos(Point(20, 166));
		}
		else if (IsKeyPressed(KEY_O))
		{
			fade_transition.SetScene(5, currentLevel, 10, 10);
			LoadLevel(--currentLevel);
			player->SetPos(Point(20, 166));
		}
	}

	//TODO Fix this, as it is obviously creating many MEMORY LEAKS
	if ((currentLevel == 4 || currentLevel == 7 || currentLevel == 9 || currentLevel == 10) && ((timer % 100) == 0))
	{
		AABB player_box;
		
		player_box = player->GetHitbox();
		//enemy_box = enemies->GetEnemyHitBox(ZOMBIE);
	//	enemy_box = enemies->GetEnemyHitBox(pos, EnemyType::ZOMBIE);


		Point pos;
		AABB hitbox, area;

		if (player->GetPlayerIsLookingRight() == true )
		{
			pos.x = WINDOW_WIDTH - ZOMBIE_FRAME_SIZE_WIDTH - 1;
			pos.y = 172;
		}
		else if (player->GetPlayerIsLookingLeft() == true )
		{
			pos.x = 1;
			pos.y = 172;
		}


		hitbox = enemies->GetEnemyHitBox(pos, EnemyType::ZOMBIE);
		area = level->GetSweptAreaX(hitbox);

		if (enemies->totalEnemies < 3)
		{
			if (player->GetPlayerIsLookingRight() == true && player->GetXPos() < SPAWN_RIGHT_LIMIT)
			{
				enemies->Add(pos, EnemyType::ZOMBIE, area, Look::LEFT);
				enemies->totalEnemies++;
			}
			else if (player->GetPlayerIsLookingLeft() == true && player->GetXPos() > SPAWN_LEFT_LIMIT)
			{
				enemies->Add(pos, EnemyType::ZOMBIE, area, Look::RIGHT);
				enemies->totalEnemies++;
			}
		}
	}
	else if ((/*currentLevel == 2 ||*/ currentLevel == 8) && ((timer % 150) == 0))
	{
		AABB player_box;

		player_box = player->GetHitbox();
		//enemy_box = enemies->GetEnemyHitBox(ZOMBIE);
	//	enemy_box = enemies->GetEnemyHitBox(pos, EnemyType::ZOMBIE);


		Point pos;
		AABB hitbox, area;

		if (player->GetPlayerIsLookingRight() == true)
		{
			pos.x = WINDOW_WIDTH - BAT_FRAME_SIZE_WIDTH - 1;
			pos.y = 100;
		}
		else if (player->GetPlayerIsLookingLeft() == true)
		{
			pos.x = 1;
			pos.y = 100;
		}


		hitbox = enemies->GetEnemyHitBox(pos, EnemyType::BAT);
		area = level->GetSweptAreaX(hitbox);

		if (enemies->totalEnemies < 3)
		{
			if (player->GetPlayerIsLookingRight() == true < SPAWN_RIGHT_LIMIT)
			{
				enemies->Add(pos, EnemyType::BAT, area, Look::LEFT);
				enemies->totalEnemies++;
			}
			else if (player->GetPlayerIsLookingLeft() == true > SPAWN_LEFT_LIMIT)
			{
				enemies->Add(pos, EnemyType::BAT, area, Look::RIGHT);
				enemies->totalEnemies++;
			}
		}
	}
	if ((currentLevel == 2 /*|| currentLevel == 3*/) && ((timer % 150) == 0))
	{
		AABB player_box;

		player_box = player->GetHitbox();
		//enemy_box = enemies->GetEnemyHitBox(ZOMBIE);
	//	enemy_box = enemies->GetEnemyHitBox(pos, EnemyType::ZOMBIE);


		Point pos;
		AABB hitbox, area;

		if (player->GetPlayerIsLookingRight() == true)
		{
			pos.x = WINDOW_WIDTH - FISHMAN_FRAME_SIZE_WIDTH - 1;
			pos.y = 100;
		}
		else if (player->GetPlayerIsLookingLeft() == true)
		{
			pos.x = 1;
			pos.y = 148;
		}


		hitbox = enemies->GetEnemyHitBox(pos, EnemyType::FISHMAN);
		area = level->GetSweptAreaX(hitbox);

		if (enemies->totalEnemies < 3)
		{
			if (player->GetPlayerIsLookingRight() == true )
			{
				enemies->Add(pos, EnemyType::FISHMAN, area, Look::LEFT);
				enemies->totalEnemies++;
			}
			else if (player->GetPlayerIsLookingLeft() == true)
			{
				enemies->Add(pos, EnemyType::FISHMAN, area, Look::RIGHT);
				enemies->totalEnemies++;
			}
		}
	}
	// TODO fix this as it is hurting the player if it still touches the enemy next frame.
	if (enemies->playerGettingHurt == true)
	{
		switch (currentLevel)
		{
			case 1:
				player->GetHurt(4);
				break;
			default:
				player->GetHurt(2);
				break;
		}
		enemies->playerGettingHurt = false;
	}

}
void Scene::Render()
{
	BeginMode2D(camera);

	level->Render();
	levelInteractables->Render();
	levelHiddenBlocks->Render();
	if (debug == DebugMode::OFF || debug == DebugMode::SPRITES_AND_HITBOXES)
	{
		RenderObjects();
		enemies->Draw();
		// This will make the player blink while invincible
		if (player->GetPlayerIsInvincible())
		{
			if (timer % 4 == 0)
				player->BlinkInvisible(1);
			else
				player->Draw();
		}
		else
			player->Draw();
		
		shots->Draw();
	}
	if (debug == DebugMode::SPRITES_AND_HITBOXES || debug == DebugMode::ONLY_HITBOXES)
	{
		RenderObjectsDebug(YELLOW);
		enemies->DrawDebug();
		player->DrawDebug(GREEN);
		shots->DrawDebug(GRAY);
	}
	particles->Draw();

	EndMode2D();
 	if (fade_transition.IsActive()) fade_transition.Render();
	RenderGUI();
}
void Scene::Release()
{
	level->Release();
	levelInteractables->Release();
	levelHiddenBlocks->Release();
	player->Release();
	ClearLevel();
}
void Scene::ResetScreen()
{	
	//StopMusicStream();
	LoadLevel(1);
	player->SetHasDied(false);
	player->ChangeHP(100);
	dyingTimer = false;
}
void Scene::ResetScreenTimer()
{
	if (dyingTimer == false)
	{
		dyingTimer = true;
		timerComparision = timer;
	}
}
bool Scene::GameOver()
{
	if (player->GetGameOver() == true)
	{
		player->SetGameOver(false);
		return true;
	}
}
bool Scene::GameEnd()
{
	if (player->GetGameEnd() == true)
	{
		player->SetGameEnd(false);
		return true;
	}
}
void Scene::CheckObjectCollisions()
{
	AABB player_box, obj_box;

	player_box = player->GetHitbox();
	auto it = objects.begin();
	while (it != objects.end())
	{
		obj_box = (*it)->GetHitbox();
		if (player_box.TestAABB(obj_box))
		{
			
			player->IncrScore((*it)->Points());
			//player->SetShield((*it)->Points());
			player->SetEquipment((*it)->Equip());
			if ((*it)->Equip() == 1000)
				player->SetGameEnd(true);
			else if ((*it)->ObjectNum() == 3)
				player->SetHearts(1);
			else if ((*it)->ObjectNum() == 4)
				player->SetHearts(5);
			else if ((*it)->ObjectNum() == 10)
				player->SetHasYellowKey(true);
			else if ((*it)->ObjectNum() == 11)
				player->SetHasWhiteKey(true);
			else if ((*it)->ObjectNum() == 20)
			{
				if (player->GetHasYellowKey() == false)
					break;
				else if (player->GetHasYellowKey() == true)
				{
					// Now the question is how to make it create an item that will blink
					// and after some frames, convert it into another item
					player->SetHasYellowKey(false);
					Object* obj;
					obj = new Object( (*it)->GetHitbox().pos , ObjectType::HEART);
					objects.push_back(obj);
				}
			}
			player->GrabObject((*it)->ObjectNum());

			//Delete the object
			delete* it;
			//Erase the object from the vector and get the iterator to the next valid element
			it = objects.erase(it);
		}
		else
		{
			//Move to the next object
			++it;
		}
	}
}
void Scene::ClearLevel()
{
	for (Object* obj : objects)
	{
		delete obj;
	}
	objects.clear();
	enemies->Release();
	shots->Clear();
	particles->Clear();
	zombieActive1 = false;
}
void Scene::RenderObjects() const
{
	for (Object* obj : objects)
	{
		obj->Draw();
	}
}
void Scene::RenderObjectsDebug(const Color& col) const
{
	for (Object* obj : objects)
	{
		obj->DrawDebug(col);
	}
}
void Scene::RenderGUI() const
{
	////Temporal approach
	//DrawText(TextFormat("SCORE : %d", player->GetScore()), 10, 10, 8, LIGHTGRAY);
	//DrawText(TextFormat("HP : %d", player->GetHP()), 10, 20, 8, LIGHTGRAY);
	//DrawText(TextFormat("LIVES : %d", player->GetLives()), 10, 30, 8, LIGHTGRAY);

	static int frame;
	frame++;
	frame %= 1000;
	//DrawTexturePro(*img_ui, { 0,0,WINDOW_WIDTH,WINDOW_HEIGHT }, { 0,0,WINDOW_WIDTH,WINDOW_HEIGHT }, { 0,0 }, 0, WHITE);

	font->Draw(57, 9, TextFormat("%06d", player->GetScore())); // TODO convert numbers into division of screen
	font->Draw(229, 9, TextFormat("%02d", player->GetLives())); // TODO convert numbers into division of screen
	font->Draw(193, 9, TextFormat("%02d", player->GetHearts())); // TODO convert numbers into division of screen
	font->Draw(157, 9, TextFormat("%02d", currentLevel)); // TODO convert numbers into division of screen
	font->Draw(10, 5, TextFormat("%d", frame), RED);
	font->Draw(10, 40, TextFormat("%02d", player->GetHP()));
	DrawRectangle(60, 22, ((player->GetHP()*2)), 5, {255, 181, 145, 255}); // HP BAR
	DrawRectangle(60, 30, 64, 5, RED); // Enemy HP BAR
	
	// Draw the keys on top, on the UI
	// TODO: Why is it entering the if?
	if (player->GetHasWhiteKey()){}
		//DrawRectangle(60, 110, 64, 5, WHITE);
		//DrawTexturePro()
	if (player->GetHasYellowKey()){}
		//DrawRectangle(60, 130, 64, 5, YELLOW);

}
