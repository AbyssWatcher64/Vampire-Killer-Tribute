#pragma once
#include <raylib.h>
#include "Sprite.h"
#include "Globals.h"
#include <unordered_map>

enum class Tile {

	//empty tile
	AIR = 0,

	BLOCK_GROUND_GRASS = 1, BLOCK_GATE, BLOCK_GATE_TREE_1, BLOCK_GATE_TREE_2,
	BLOCK_TREE_1, BLOCK_TREE_2, BLOCK_TREE_3, BLOCK_TREE_4,
	BLOCK_TREE_5, BLOCK_TREE_6, BLOCK_TREE_7, BLOCK_TREE_8,
	BLOCK_TREE_9, BLOCK_TREE_10, BLOCK_TREE_11, BLOCK_TREE_12,

	BLOCK_TREE_13, BLOCK_TREE_14, BLOCK_TREE_15, BLOCK_TREE_16,
	BLOCK_TREE_17, BLOCK_TREE_18, BLOCK_TREE_19, BLOCK_TREE_20,
	BLOCK_TREE_21, BLOCK_TREE_22, BLOCK_TREE_23, BLOCK_TREE_24,
	BLOCK_TREE_25, BLOCK_TREE_26, BLOCK_TREE_27, BLOCK_TREE_28,

	BLOCK_TREE_29, BLOCK_TREE_30, BLOCK_TREE_31, BLOCK_TREE_32,
	BLOCK_TREE_WALL, BLOCK_WALL_OUTSIDE_1, BLOCK_WALL_OUTSIDE_2, BLOCK_WALL_OUTSIDE_3,
	BLOCK_WALL_OUTSIDE_4, BLOCK_WALL_OUTSIDE_5, BLOCK_WALL_OUTSIDE_6, BLOCK_WALL_OUTSIDE_7,
	BLOCK_WALL_OUTSIDE_WINDOW_1, BLOCK_WALL_OUTSIDE_WINDOW_2, BLOCK_WALL_OUTSIDE_WINDOW_3, BLOCK_WALL_OUTSIDE_WINDOW_4,

	BLOCK_WALL_OUTSIDE_WINDOW_5, BLOCK_WALL_OUTSIDE_WINDOW_6, BLOCK_WALL_OUTSIDE_WINDOW_7, BLOCK_WALL_OUTSIDE_WINDOW_8,
	BLOCK_WALL_OUTSIDE_WINDOW_9, BLOCK_WALL_OUTSIDE_WINDOW_10, BLOCK_WALL_OUTSIDE_WINDOW_11, BLOCK_WALL_OUTSIDE_WINDOW_12,
	BLOCK_WALL_INSIDE_1, BLOCK_WALL_INSIDE_2, BLOCK_WALL_INSIDE_WINDOW_1, BLOCK_WALL_INSIDE_WINDOW_2,
	BLOCK_WALL_INSIDE_3, BLOCK_COLUMN_STATUE_1, BLOCK_COLUMN_STATUE_2, BLOCK_COLUMN_STATUE_3,

	//TODO Add the rest of the blocks

	
	LADDER_L = 200, LADDER_R, LADDER_TOP_L, LADDER_TOP_R,
	
	LOCK_RED = 300, LOCK_YELLOW, 
	
	LASER_L = 400, LASER_R,

	LASER = 700, LASER_FRAME0, LASER_FRAME1, LASER_FRAME2,

	// id >= 100: entities' initial locations
	PLAYER = 100
};

class TileMap
{
public:
	TileMap();
	~TileMap();

	AppStatus Initialise();
	AppStatus Load(int data[], int w, int h);
	void Update();
	void Render();
	void Release();

private:
	void InitTileDictionary();

	//Tile map
	Tile *map;
	//Size of the tile map
	int width, height;
	
	//Dictionary of tile frames
	std::unordered_map<int, Rectangle> dict_rect;

	Sprite *laser;
	
	//Tile sheet
	const Texture2D *img_tiles;
};

